<Application x:Class="AmazonManifest.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" StartupUri="MainWindow.xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006">
  <Application.Resources>
    <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:AmazonManifest.ViewModel" />
        <SolidColorBrush x:Key="MainAccentBrush" Color="#FF46A8F9"></SolidColorBrush>
        <SolidColorBrush x:Key="MainAccentLightBrush" Color="#FF3BAFFF"></SolidColorBrush>
        <SolidColorBrush x:Key="LightGray" Color="#FFF0F0F0"></SolidColorBrush>

        <Color x:Key="ButtonRedColor">#FFEE4747</Color>
        <Color x:Key="ButtonGreenColor">#FF61A212</Color>
        <Color x:Key="ButtonYellowColor">#FFF5F500</Color>
        <Color x:Key="ButtonBlueColor">#FF009FDE</Color>
        <Color x:Key="ButtonOrangeColor">#FFFFB800</Color>
        <Color x:Key="ButtonGrayColor">LightGray</Color>
        <Color x:Key="ButtonLightGrayColor">#FFEEEEEE</Color>

        <SolidColorBrush x:Key="ButtonRedBrush" Color="{StaticResource ButtonRedColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonGreenBrush" Color="{StaticResource ButtonGreenColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonYellowBrush" Color="{StaticResource ButtonYellowColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonBlueBrush" Color="{StaticResource ButtonBlueColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonOrangeBrush" Color="{StaticResource ButtonOrangeColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonGrayBrush" Color="{StaticResource ButtonGrayColor}"></SolidColorBrush>
        <SolidColorBrush x:Key="ButtonLightGrayBrush" Color="{StaticResource ButtonLightGrayColor}"></SolidColorBrush>

        <Style TargetType="Button" x:Key="BaseButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                CornerRadius="4" 
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                Name="PART_Border">
                            <Grid>
                                <TextBlock Name="PART_Text" Text="{TemplateBinding Content}" 
                                           HorizontalAlignment="Center" 
                                           VerticalAlignment="Center"
                                           FontSize="18"
                                           Foreground="{TemplateBinding Foreground}" FontFamily="Roboto Light"
                                           TextAlignment="Center"
                                           TextWrapping="Wrap">
                                </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Margin" TargetName="PART_Text" Value="0,2,0,0"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="PART_Border" Value="{StaticResource ButtonLightGrayBrush}"></Setter>
                                <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource ButtonGrayBrush}"></Setter>
                                <Setter Property="BorderThickness" TargetName="PART_Border" Value="1"></Setter>
                                <Setter Property="Foreground" TargetName="PART_Text" Value="{StaticResource ButtonGrayBrush}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="Button" x:Key="RedButton" BasedOn="{StaticResource BaseButton}">
            <Setter Property="Background" Value="{StaticResource ButtonRedBrush}"></Setter>
        </Style>

        <Style TargetType="Button" x:Key="GreenButton" BasedOn="{StaticResource BaseButton}">
            <Setter Property="Background" Value="{StaticResource ButtonGreenBrush}"></Setter>
        </Style>

        <Style TargetType="Button" x:Key="YellowButton" BasedOn="{StaticResource BaseButton}">
            <Setter Property="Background" Value="{StaticResource ButtonYellowBrush}"></Setter>
        </Style>

        <Style TargetType="Button" x:Key="BlueButton" BasedOn="{StaticResource BaseButton}">
            <Setter Property="Background" Value="{StaticResource ButtonBlueBrush}"></Setter>
        </Style>

        <Style TargetType="Button" x:Key="OrangeButton" BasedOn="{StaticResource BaseButton}">
            <Setter Property="Background" Value="{StaticResource ButtonOrangeBrush}"></Setter>
        </Style>

        <Style TargetType="Button" x:Key="GrayButton" BasedOn="{StaticResource BaseButton}">
            <Setter Property="Background" Value="{StaticResource ButtonGrayBrush}"></Setter>
        </Style>


        <Style TargetType="ItemsControl" x:Key="ActionPanelStyle">
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="VerticalAlignment" Value="Top"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Button Width="150" Content="{Binding ActionText}" 
                                Command="{Binding ActionCommand}" 
                                Visibility="{Binding Visibility}"
                                Style="{Binding Style}"
                                Margin="10">
                        </Button>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"></StackPanel>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ItemsControl">
                        <Border>
                            <ItemsPresenter>
                            </ItemsPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Roboto Light"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="ReportSummary">
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="Margin" Value="2,4,0,3"></Setter>
            <Setter Property="FontFamily" Value="Roboto Light"></Setter>
        </Style>

        <Style TargetType="Border" x:Key="ReportSummaryBlock">
            <Setter Property="Margin" Value="0,5,0,0"></Setter>
            <Setter Property="Background" Value="{StaticResource LightGray}"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
        </Style>

        <Style TargetType="CheckBox" x:Key="ReportFilterCheckbox">
            <Setter Property="TextBlock.FontSize" Value="14"></Setter>
            <Setter Property="Margin" Value="2,4,0,3"></Setter>
            <Setter Property="TextBlock.FontFamily" Value="Roboto Light"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <BulletDecorator Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Right">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border"
                                        Width="15"
                                        Height="15"
                                        CornerRadius="0"
                                        Background="White"
                                        BorderThickness="2"
                                        BorderBrush="#FF6A6A6A">
                                        <Path
                                            Width="12" Height="12"
                                            x:Name="CheckMark"
                                            SnapsToDevicePixels="False"
                                            Stroke="#FF6A6A6A"
                                            StrokeThickness="3"
                                            Data="M 1 5 L 4 9 10 1" />
                                    </Border>
                                </BulletDecorator.Bullet>
                            </BulletDecorator>
                            <ContentPresenter Margin="0,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    RecognizesAccessKey="True" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="White" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Border" x:Key="InnerDialogBorder">
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="CornerRadius" Value="3"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="Background" Value="{StaticResource LightGray}"></Setter>
            <Setter Property="Padding" Value="12"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="InnerDialogHeader">
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="26"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontFamily" Value="Roboto Light"></Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="InnerDialogDescription">
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="18"></Setter>
            <Setter Property="TextWrapping" Value="Wrap"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontFamily" Value="Roboto Light"></Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Height" Value="45"></Setter>
            <Setter Property="BorderBrush" Value="#FF6A6A6A" />
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="FontSize" Value="21"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI Light"></Setter>
            <Setter Property="Margin" Value="10"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="17*"></ColumnDefinition>
                                <ColumnDefinition Width="3*"></ColumnDefinition>
                                <ColumnDefinition Width="47*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="{TemplateBinding Tag}" FontSize="16" TextAlignment="Right" FontFamily="Roboto Light" VerticalAlignment="Center" ></TextBlock>

                            <Border x:Name="PART_Border"
                                    Grid.Column="2"
                                    CornerRadius="3"
                                    Padding="5"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="White">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"></ScrollViewer>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource MainAccentBrush}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource MainAccentBrush}"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Height" Value="45"></Setter>
            <Setter Property="BorderBrush" Value="#FF6A6A6A" />
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="FontSize" Value="21"></Setter>
            <Setter Property="FontFamily" Value="Segoe UI Light"></Setter>
            <Setter Property="Margin" Value="10"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="17*"></ColumnDefinition>
                                <ColumnDefinition Width="3*"></ColumnDefinition>
                                <ColumnDefinition Width="47*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="{TemplateBinding Tag}"  FontSize="16" TextAlignment="Right" FontFamily="Roboto Light" VerticalAlignment="Center" ></TextBlock>

                            <Border x:Name="PART_Border"
                                    Grid.Column="2"
                                    CornerRadius="3"
                                    Padding="5"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="White">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"></ScrollViewer>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource MainAccentBrush}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource MainAccentBrush}"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="TextBlock.FontSize" Value="16"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="TextBlock.FontFamily" Value="Roboto Light"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="17*"></ColumnDefinition>
                                <ColumnDefinition Width="3*"></ColumnDefinition>
                                <ColumnDefinition Width="47*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <BulletDecorator Background="Transparent" Grid.Column="2" VerticalAlignment="Center">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border"
                                        Width="25"
                                        Height="25"
                                        CornerRadius="3"
                                        Background="White"
                                        BorderThickness="2"
                                        BorderBrush="#FF6A6A6A">
                                        <Path
                                            Width="20" Height="20"
                                            x:Name="CheckMark"
                                            SnapsToDevicePixels="False"
                                            Stroke="#FF6A6A6A"
                                            StrokeThickness="3"
                                            Data="M 3 10 L 8 17 17 3" />
                                    </Border>
                                </BulletDecorator.Bullet>
                            </BulletDecorator>
                            <ContentPresenter Grid.Column="0" Margin="4,0,0,0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right"
                                    RecognizesAccessKey="True"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="White" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox" x:Key="ShiftDateSelector">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                            </Grid.RowDefinitions>

                            <Border Name="PART_DateBorder" Background="{StaticResource LightGray}" Grid.Column="0">
                                <TextBlock Text="Date" HorizontalAlignment="Center" VerticalAlignment="Center" Name="PART_DateText" Foreground="DarkGray"></TextBlock>
                            </Border>
                            <Border Name="PART_ShiftBorder" Background="{StaticResource MainAccentBrush}" Grid.Column="1">
                                <TextBlock Text="Shift" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" Name="PART_ShiftText"></TextBlock>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" Value="{StaticResource MainAccentBrush}" TargetName="PART_DateBorder"></Setter>
                                <Setter Property="Background" Value="{StaticResource LightGray}" TargetName="PART_ShiftBorder"></Setter>
                                <Setter Property="Foreground" Value="White" TargetName="PART_DateText"></Setter>
                                <Setter Property="Foreground" Value="DarkGray" TargetName="PART_ShiftText"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListView">
            <Setter Property="AlternationCount" Value="2"></Setter>
        </Style>

        <Style TargetType="GridViewColumnHeader">
            <Setter Property="FontFamily" Value="Roboto"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
        </Style>

        <Style TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="Roboto"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>

            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="{StaticResource LightGray}"></Setter>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="White"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TabControl">
            <Setter Property="Margin" Value="0,20,0,0"></Setter>
        </Style>



        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Panel" CornerRadius="3,3,0,0" Background="{TemplateBinding Background}"
                                Height="38" Width="100"
                                VerticalAlignment="Bottom"
                                BorderBrush="White"
                                BorderThickness="1,1,1,0">
                            <Border x:Name="Highlight" CornerRadius="3,3,0,0">
                                <ContentPresenter x:Name="ContentSite"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            ContentSource="Header"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Panel" Property="Height" Value="40" />
                                <Setter TargetName="Panel" Property="BorderThickness" Value="0,0,0,0" />
                                <Setter TargetName="Highlight" Property="Background" Value="#66FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Panel" Property="CornerRadius" Value="0,0,0,0" />
                                <Setter TargetName="Highlight" Property="Background" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TabItem" x:Key="YellowTab" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="Background" Value="{StaticResource ButtonYellowBrush}"></Setter>
        </Style>

        <Style TargetType="TabItem" x:Key="GreenTab" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="Background" Value="{StaticResource ButtonGreenBrush}"></Setter>
        </Style>

        <Style TargetType="TabItem" x:Key="BlueTab" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="Background" Value="{StaticResource ButtonBlueBrush}"></Setter>
        </Style>

        <Style TargetType="TabItem" x:Key="OrangeTab" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="Background" Value="{StaticResource ButtonOrangeBrush}"></Setter>
        </Style>

        <Style TargetType="TabItem" x:Key="RedTab" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="Background" Value="{StaticResource ButtonRedBrush}"></Setter>
        </Style>

        <Style TargetType="TabItem" x:Key="GrayTab" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="Background" Value="{StaticResource ButtonGrayBrush}"></Setter>
        </Style>


        <!--

        **********************************************************
        COMBO BOX STYLES
        **********************************************************

        -->
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>

        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <Color x:Key="AccentColorMouseOver">#FF007EE8</Color>
        <Color x:Key="MainAccentColor">#FF46A8F9</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"  Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF" Offset="0" />
                    <GradientStop Color="#600000FF" Offset="0.4" />
                    <GradientStop Color="#600000FF" Offset="0.6" />
                    <GradientStop Color="#000000FF" Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).Color" Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0" Value="White" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).Color" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource AccentColorMouseOver}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).Color" Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource AccentColorMouseOver}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.Fill).Color" Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0" Value="White" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="3" BorderThickness="1" 
                        BorderBrush="#FF549AFF" 
                        Background="#FF46A8F9">

                </Border>
                <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1">
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                    </Border.Background>
                </Border>
                <Path x:Name="Arrow"
                      Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="82" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <TextBlock Text="{TemplateBinding Tag}" Grid.Row="0" VerticalAlignment="Bottom"></TextBlock>

                            <ToggleButton Grid.Row="1" x:Name="ToggleButton"
                                Template="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                ClickMode="Press"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Grid.Row="1" x:Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,0,23,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox Grid.Row="1" x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"
                                Background="Transparent"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup"
                                 Placement="Bottom"
                                 IsOpen="{TemplateBinding IsDropDownOpen}"
                                 AllowsTransparency="True"
                                 Focusable="False"
                                 PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border"
                                Padding="2"
                                SnapsToDevicePixels="true"
                                Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--
        *************************************************************
        Date Picker Style
        *************************************************************
        -->

        <!--In this example, an implecit style for Calendar is defined elsewhere
        in the application.  DatePickerCalendarStyle is based on the implicit
        style so that the DatePicker will use the application's calendar style.-->
        <Style x:Key="DatePickerCalendarStyle" TargetType="{x:Type Calendar}" BasedOn="{StaticResource {x:Type Calendar}}" />

        <!--The template for the button that displays the calendar.-->
        <Style x:Key="DropDownButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" />
                                        <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                        <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimation Duration="0"
                                                To="#FF448DCA"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Background" />
                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="Background"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA" />
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                 Duration="00:00:00.001"
                                                 Storyboard.TargetProperty="(UIElement.Opacity)"
                                                 Storyboard.TargetName="Highlight">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames BeginTime="0"
                                                Duration="00:00:00.001"
                                                Storyboard.TargetName="BackgroundGradient"
                                                Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="24" Margin="0" VerticalAlignment="Center" Width="24">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25*" />
                                    <RowDefinition Height="18*" />
                                    <RowDefinition Height="19*" />
                                    <RowDefinition Height="19*" />
                                </Grid.RowDefinitions>

                                <Border x:Name="Highlight" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="1" Grid.Row="0" Grid.RowSpan="4"/>
                                <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,3,3" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource ControlDarkColor}" />
                                    </Border.Background>
                                </Border>

                                <Border x:Name="BackgroundGradient"
                                        BorderBrush="#BF000000"
                                        BorderThickness="1"
                                        Grid.ColumnSpan="4"
                                        CornerRadius="0,0,3,3"
                                        Margin="0,-1,0,0"
                                        Opacity="1"
                                        Grid.Row="1"
                                        Grid.RowSpan="3">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>

                                <Border Grid.ColumnSpan="4" Grid.RowSpan="1" CornerRadius="3,3,0,0" Background="#FFE60000" BorderThickness="1,1,1,0" BorderBrush="#FF3A3A3A">
                                    <TextBlock Text="Monday" FontSize="4" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="1,0,0,0"></TextBlock>
                                </Border>
                                <Path Fill="#FF2F2F2F"
                                      Grid.Row="1"
                                      Grid.Column="0"
                                      Grid.RowSpan="3"
                                      Grid.ColumnSpan="4"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RenderTransformOrigin="0.5,0.5"
                                      Margin="5,3,5,4"
                                      Stretch="Fill" StrokeThickness="0"
                                      Data="M11.426758,8.4305077 L11.749023,8.4305077
                                            L11.749023,16.331387 L10.674805,16.331387
                                            L10.674805,10.299648 L9.0742188,11.298672
                                            L9.0742188,10.294277 C9.4788408,10.090176
                                            9.9094238,9.8090878 10.365967,9.4510155
                                            C10.82251,9.0929432 11.176106,8.7527733
                                            11.426758,8.4305077 z M14.65086,8.4305077
                                            L18.566387,8.4305077 L18.566387,9.3435936
                                            L15.671368,9.3435936 L15.671368,11.255703
                                            C15.936341,11.058764 16.27293,10.960293
                                            16.681133,10.960293 C17.411602,10.960293
                                            17.969301,11.178717 18.354229,11.615566
                                            C18.739157,12.052416 18.931622,12.673672
                                            18.931622,13.479336 C18.931622,15.452317
                                            18.052553,16.438808 16.294415,16.438808
                                            C15.560365,16.438808 14.951641,16.234707
                                            14.468243,15.826504 L14.881817,14.929531
                                            C15.368796,15.326992 15.837872,15.525723
                                            16.289043,15.525723 C17.298809,15.525723
                                            17.803692,14.895514 17.803692,13.635098
                                            C17.803692,12.460618 17.305971,11.873379
                                            16.310528,11.873379 C15.83071,11.873379
                                            15.399232,12.079271 15.016094,12.491055
                                            L14.65086,12.238613 z" />
                                <Border x:Name="DisabledVisual"
                                        BorderBrush="#B2FFFFFF"
                                        BorderThickness="1"
                                        Grid.ColumnSpan="4"
                                        CornerRadius="0,0,.5,.5"
                                        Opacity="0"
                                        Grid.Row="0"
                                        Grid.RowSpan="4" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Foreground" Value="#FF333333" />
            <Setter Property="IsTodayHighlighted" Value="True" />
            <Setter Property="SelectedDateFormat" Value="Short" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />

            <!--Set CalendarStyle to DatePickerCalendarStyle.-->
            <Setter Property="CalendarStyle"  Value="{DynamicResource DatePickerCalendarStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="30"></RowDefinition>
                            </Grid.RowDefinitions>

                            <TextBlock Text="{TemplateBinding Tag}" VerticalAlignment="Bottom"></TextBlock>

                            <Border Grid.Row="1" BorderThickness="1" CornerRadius="3" Padding="1" Background="{StaticResource MainAccentBrush}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                                 To="1"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 Storyboard.TargetName="PART_DisabledVisual" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid x:Name="PART_Root"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="PART_Button"
                                        Grid.Column="1"
                                        Foreground="{TemplateBinding Foreground}"
                                        Focusable="False"
                                        HorizontalAlignment="Center"
                                        Margin="2,1,1,0"
                                        Style="{StaticResource DropDownButtonStyle}"
                                        VerticalAlignment="Center" Height="25" />

                                    <DatePickerTextBox 
                                       x:Name="PART_TextBox"
                                       Margin="0"
                                       Grid.Column="0"
                                       Foreground="{TemplateBinding Foreground}"
                                       Focusable="{TemplateBinding Focusable}"
                                       HorizontalContentAlignment="Center"
                                       VerticalContentAlignment="Center" 
                                       FontSize="14"
                                       FontFamily="Roboto Light"/>

                                    <Grid x:Name="PART_DisabledVisual"
                                        Grid.ColumnSpan="2"
                                        Grid.Column="0"
                                        IsHitTestVisible="False"
                                        Opacity="0"
                                        Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Grid.Column="0"
                                             Fill="#A5FFFFFF"
                                             RadiusY="1"
                                             Grid.Row="0"
                                             RadiusX="1" />
                                        <Rectangle Grid.Column="1"
                                            Fill="#A5FFFFFF"
                                            Height="18"
                                            Margin="3,0,3,0"
                                            RadiusY="1"
                                            Grid.Row="0"
                                            RadiusX="1"
                                            Width="19" />
                                        <Popup x:Name="PART_Popup"
                                             AllowsTransparency="True"
                                             Placement="Bottom"
                                             PlacementTarget="{Binding ElementName=PART_TextBox}"
                                             StaysOpen="False" />
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>